document.addEventListener('DOMContentLoaded', function() {
        // T√¨m c√°c ph·∫ßn t·ª≠ modal v√† n√∫t ƒëi·ªÅu khi·ªÉn
        const lessonModal = document.getElementById('lessonModal');
        const lessonDetailModal = document.getElementById('lesson');
        const quizModal = document.getElementById('quiz');
        const openModalBtn = document.getElementById('openModal');
        
        // T√¨m t·∫•t c·∫£ c√°c n√∫t "B√†i h·ªçc m·ªõi"
        const lessonButtons = document.querySelectorAll('.lesson-button');
        
        // T√¨m c√°c n√∫t ƒë√≥ng cho modal lesson (c·∫≠p nh·∫≠t b√†i h·ªçc)
        const closeDetailModalBtn = document.querySelector('#lesson .close-button');
        const cancelDetailModalBtn = document.querySelector('#lesson .btn-cancel');
        const saveDetailBtn = document.querySelector('#lesson .btn-save');
        
        // T√¨m c√°c n√∫t ƒë√≥ng cho modal lessonModal (ph·∫ßn h·ªçc)
        const closeModalBtn = document.querySelector('#lessonModal .close-button');
        const cancelModalBtn = document.querySelector('#lessonModal .btn-cancel');
        const saveBtn = document.querySelector('#lessonModal .btn-save');
        
     	// T√¨m c√°c n√∫t ƒë√≥ng cho modal quiz
        const closeQuizModalBtn = document.querySelector('#quiz .close-button');
        const cancelQuizModalBtn = document.querySelector('#quiz .btn-cancel');
        const saveQuizBtn = document.querySelector('#quiz .btn-save');
        
     	// Th√™m code x·ª≠ l√Ω n√∫t "Add new question" v√†o ƒë√¢y:
        const addQuestionBtn = document.querySelector('.quiz-actions');
        const modalBody = document.querySelector('.modal-body');
        
        const lessonListContainer = document.querySelector('.lesson-list-container');
        const emptyState = document.querySelector('.empty-state');
        
        let editingSectionId = null;
		let editingSectionElement = null;
		
		let editingLessonId = null;
		let editingLessonElement = null;
        
        // Bi·∫øn ƒë·ªÉ l∆∞u ph·∫ßn h·ªçc hi·ªán t·∫°i ƒëang m·ªü modal b√†i h·ªçc
        let currentSection = null;
        
     	// Bi·∫øn ƒë·ªÉ l∆∞u ph·∫ßn h·ªçc hi·ªán t·∫°i ƒëang m·ªü modal b√†i tr·∫Øc nghi·ªám
        let currentQuizSection = null;
        
        // C√°c h√†m m·ªü/ƒë√≥ng modal
        function openLessonModal() {
            lessonModal.classList.add('show');
        }
        
        function openLessonDetailModal(section) {
            currentSection = section;
            editingLessonId = null;
            editingLessonElement = null;
            lessonDetailModal.classList.add('show');
            
            document.querySelector('#lesson .form-input[placeholder="Nh·∫≠p ti√™u ƒë·ªÅ"]').value = '';
		    document.querySelector('#lesson textarea.form-input').value = '';
		    document.querySelector('#lesson .video-input').value = '';
		    document.getElementById('freeTrialCheckbox').checked = false;
        }
        
     	// H√†m m·ªü/ƒë√≥ng modal quiz
        function openQuizModal(section) {
            currentQuizSection = section;
            quizModal.classList.add('show');
        }
        
        function closeLessonModal() {
            if (lessonModal) lessonModal.classList.remove('show');
        }
        
        function closeLessonDetailModal() {
            if (lessonDetailModal) lessonDetailModal.classList.remove('show');
        }
        
        function closeQuizModal() {
            if (quizModal) quizModal.classList.remove('show');
        }
        
        // Th√™m event listener cho modal ph·∫ßn h·ªçc (lessonModal)
        if (openModalBtn) {
            openModalBtn.addEventListener('click', openLessonModal);
        }
        
        if (closeModalBtn) {
            closeModalBtn.addEventListener('click', closeLessonModal);
        }
        
        if (cancelModalBtn) {
            cancelModalBtn.addEventListener('click', closeLessonModal);
        }
        
        if (lessonModal) {
            lessonModal.addEventListener('click', function(e) {
                if (e.target === lessonModal) {
                    closeLessonModal();
                }
            });
        }
        
        // Th√™m event listener cho modal b√†i h·ªçc (lesson)
        lessonButtons.forEach(button => {
            if (button.textContent === 'B√†i h·ªçc m·ªõi') {
                button.addEventListener('click', function() {
                    // T√¨m ph·∫ßn h·ªçc (course-section) ch·ª©a n√∫t n√†y
                    const section = this.closest('.course-section');
                    openLessonDetailModal(section);
                });
            }
        });
        
     	// Th√™m event listener cho c√°c n√∫t "B√†i tr·∫Øc nghi·ªám"
        const quizButtons = document.querySelectorAll('.lesson-button');
        quizButtons.forEach(button => {
            if (button.textContent === 'B√†i tr·∫Øc nghi·ªám') {
                button.addEventListener('click', function() {
                    const section = this.closest('.course-section');
                    openQuizModal(section);
                });
            }
        });
        
     	// Th√™m event listeners cho ƒë√≥ng modal quiz
        if (closeQuizModalBtn) {
            closeQuizModalBtn.addEventListener('click', closeQuizModal);
        }
        
        if (cancelQuizModalBtn) {
            cancelQuizModalBtn.addEventListener('click', closeQuizModal);
        }
        
        if (quizModal) {
            quizModal.addEventListener('click', function(e) {
                if (e.target === quizModal) {
                    closeQuizModal();
                }
            });
        }
        
        if (closeDetailModalBtn) {
            closeDetailModalBtn.addEventListener('click', closeLessonDetailModal);
        }
        
        if (cancelDetailModalBtn) {
            cancelDetailModalBtn.addEventListener('click', closeLessonDetailModal);
        }
        
        if (lessonDetailModal) {
            lessonDetailModal.addEventListener('click', function(e) {
                if (e.target === lessonDetailModal) {
                    closeLessonDetailModal();
                }
            });
        }
        if (addQuestionBtn && modalBody) {
            addQuestionBtn.addEventListener('click', function() {
                // T·∫°o ph·∫ßn t·ª≠ c√¢u h·ªèi m·ªõi
                const newQuestion = document.createElement('div');
                newQuestion.className = 'question-container';
                newQuestion.innerHTML = `
                    <div class="question-header">
                        <input type="text" class="question-input" placeholder="Nh·∫≠p c√¢u h·ªèi">
                        <input type="number" class="question-score" placeholder="ƒêi·ªÉm" min="0" style="width: 80px; margin-left: 10px;">
                        <button class="delete-question">üóëÔ∏è</button>
                    </div>
                    <div class="answers-container">
                        <div class="answer-option">
                            <input type="checkbox" class="answer-checkbox">
                            <input type="text" class="answer-input" placeholder="Nh·∫≠p c√¢u tr·∫£ l·ªùi">
                            <button class="delete-answer">üóëÔ∏è</button>
                        </div>
                        <div class="answer-option">
                            <input type="checkbox" class="answer-checkbox">
                            <input type="text" class="answer-input" placeholder="Nh·∫≠p c√¢u tr·∫£ l·ªùi">
                            <button class="delete-answer">üóëÔ∏è</button>
                        </div>
                        <div class="answer-option">
                            <input type="checkbox" class="answer-checkbox">
                            <input type="text" class="answer-input" placeholder="Nh·∫≠p c√¢u tr·∫£ l·ªùi">
                            <button class="delete-answer">üóëÔ∏è</button>
                        </div>
                        <div class="answer-option">
                            <input type="checkbox" class="answer-checkbox">
                            <input type="text" class="answer-input" placeholder="Nh·∫≠p c√¢u tr·∫£ l·ªùi">
                            <button class="delete-answer">üóëÔ∏è</button>
                        </div>
                    </div>
                    <button class="add-answer-btn">+ Th√™m tr·∫£ l·ªùi</button>
                `;
                
                const quizActions = document.querySelector('.quiz-actions');
				if (quizActions && quizActions.parentNode) {
				    quizActions.parentNode.insertBefore(newQuestion, quizActions);
				} else {
				    // N·∫øu kh√¥ng t√¨m th·∫•y .quiz-actions ho·∫∑c kh√¥ng c√≥ parent node
				    modalBody.appendChild(newQuestion);
				}
                
                // Th√™m event listener cho n√∫t "Add answer"
                const addAnswerBtn = newQuestion.querySelector('.add-answer-btn');
                addAnswerBtn.addEventListener('click', function() {
                    const answersContainer = this.previousElementSibling;
                    const newAnswer = document.createElement('div');
                    newAnswer.className = 'answer-option';
                    newAnswer.innerHTML = `
                        <input type="checkbox" class="answer-checkbox">
                        <input type="text" class="answer-input" placeholder="Nh·∫≠p c√¢u tr·∫£ l·ªùi">
                        <button class="delete-answer">üóëÔ∏è</button>
                    `;
                    answersContainer.appendChild(newAnswer);
                    
                    // Th√™m event listener cho n√∫t x√≥a c√¢u tr·∫£ l·ªùi
                    const deleteBtn = newAnswer.querySelector('.delete-answer');
                    deleteBtn.addEventListener('click', function() {
                        this.parentElement.remove();
                    });
                });
                
                // Th√™m event listeners cho c√°c n√∫t x√≥a
                const deleteQuestionBtn = newQuestion.querySelector('.delete-question');
                deleteQuestionBtn.addEventListener('click', function() {
                    this.closest('.question-container').remove();
                });
                
                const deleteAnswerBtns = newQuestion.querySelectorAll('.delete-answer');
                deleteAnswerBtns.forEach(btn => {
                    btn.addEventListener('click', function() {
                        this.parentElement.remove();
                    });
                });
            });
        }
        
        
        // X·ª≠ l√Ω n√∫t l∆∞u cho modal ph·∫ßn h·ªçc
        if (saveBtn && lessonModal) {
			console.log('editingSectionElement:', editingSectionElement);
            saveBtn.addEventListener('click', function () {
			  const sectionTitle = document.querySelector('#lessonModal .form-input[type="text"]').value.trim();
				
			  if (sectionTitle) {
			    if (editingSectionElement) {
			      // C·∫≠p nh·∫≠t UI
			      const titleDiv = editingSectionElement.querySelector('.section-title');
			      console.log('editingSectionElement1:', editingSectionElement);
			      if (titleDiv) {
			        const sectionIndex = Array.from(document.querySelectorAll('.course-section')).indexOf(editingSectionElement) + 1;
			        titleDiv.textContent = `Ph·∫ßn ${sectionIndex}: ${sectionTitle}`;
			      }
			
			      // G·ª≠i request c·∫≠p nh·∫≠t n·∫øu c·∫ßn
			      fetch('/utedemyProject/teacher/updateSection', {
			        method: 'POST',
			        headers: {
			          'Content-Type': 'application/x-www-form-urlencoded'
			        },
			        body: `sectionId=${editingSectionId}&sectionTitle=${encodeURIComponent(sectionTitle)}`
			      })
			      .then(response => {
			        if (response.ok) {
			          // C·∫≠p nh·∫≠t l·∫°i UI n·∫øu mu·ªën
			          const titleDiv = editingLessonElement.querySelector('.section-title');
			          if (titleDiv) {
			            const sectionIndex = Array.from(document.querySelectorAll('.course-section')).indexOf(editingSectionElement) + 1;
			            titleDiv.textContent = `Ph·∫ßn ${sectionIndex}: ${sectionTitle}`;
			          }
			
			          closeLessonModal();
			          editingSectionId = null;
			          editingSectionElement = null;
			        } else {
			          alert("L·ªói khi c·∫≠p nh·∫≠t ph·∫ßn h·ªçc!");
			        }
			      });
			    } else {
			      // T·∫°o m·ªõi n·∫øu kh√¥ng trong tr·∫°ng th√°i ch·ªânh s·ª≠a
			      fetch('/utedemyProject/teacher/addSection', {
			        method: 'POST',
			        headers: {
			          'Content-Type': 'application/x-www-form-urlencoded'
			        },
			        body: `sectionTitle=${encodeURIComponent(sectionTitle)}`
			      })
			      .then(response => response.text()) // ƒê·ªïi t·ª´ .json() sang .text() ƒë·ªÉ xem n·ªôi dung
					.then(text => {
					  console.log("Ph·∫£n h·ªìi th√¥ t·ª´ server:", text); // Ki·ªÉm tra server tr·∫£ v·ªÅ g√¨
					  try {
					    const data = JSON.parse(text); // T·ª± parse th·ªß c√¥ng
					    if (data && data.sectionId) {
					      addSectionToUI(data.title, data.sectionId);
					    } else {
					      alert("Ph·∫£n h·ªìi kh√¥ng h·ª£p l·ªá t·ª´ server!");
					    }
					  } catch (error) {
					    console.error("Kh√¥ng th·ªÉ parse JSON:", error);
					    alert("Ph·∫£n h·ªìi kh√¥ng ph·∫£i l√† JSON h·ª£p l·ªá!");
					  }
					})
					.catch(error => {
					  console.error("L·ªói khi th√™m ph·∫ßn h·ªçc:", error);
					  alert("Kh√¥ng th·ªÉ th√™m ph·∫ßn h·ªçc!");
					});
			    }
			
			    closeLessonModal();
			  }
			});
        }
        function openEditSectionModal(title) {
		  const modal = document.getElementById('lessonModal');
		  const titleInput = modal.querySelector('#sectionTitle');
		  
		  if (titleInput) {
		    titleInput.value = title;
		  }
		  lessonModal.classList.add('show');
		}
        function addSectionToUI(sectionTitle, sectionId) {
		    const sectionNumber = document.querySelectorAll('.course-section').length + 1;
		    const newSection = document.createElement('div');
		    newSection.className = 'course-section';
		    newSection.innerHTML = `
		        <div class="section-header">
		            <div class="section-title">
		                Ph·∫ßn ${sectionNumber}: ${sectionTitle}
		            </div>
		            <div class="section-columns">
		                <div class="column-label">H·ªçc th·ª≠</div>
		                <div class="column-label">Tr·∫°ng th√°i</div>
		                <div class="column-label">Th·ªùi l∆∞·ª£ng</div>
		            </div>
		            <div class="section-actions">
		                <div class="action-icon edit-section" data-id="${sectionId}">‚úé</div>
		                <div class="action-icon">üóë</div>
		            </div>
		        </div>
		        
		        <div class="lesson-actions">
		            <button class="lesson-button">B√†i h·ªçc m·ªõi</button>
		            <button class="lesson-button">B√†i tr·∫Øc nghi·ªám</button>
		        </div>
		        
		        <div class="lesson-info">
		           'M·ªói b√†i h·ªçc n√™n c√≥ m·ªôt b√†i tr·∫Øc nghi·ªám ƒë·ªÉ c·ªßng c·ªë ki·∫øn th·ª©c'
		        </div>
		    `;
		
		    // Th√™m s·ª± ki·ªán cho n√∫t "B√†i h·ªçc m·ªõi"
		    const newLessonButtons = newSection.querySelectorAll('.lesson-button');
		    newLessonButtons.forEach(button => {
		        if (button.textContent === 'B√†i h·ªçc m·ªõi') {
		            button.addEventListener('click', function () {
		                openLessonDetailModal(newSection);
		            });
		        }
		    });
		
		    if (lessonListContainer && openModalBtn) {
		        lessonListContainer.insertBefore(newSection, openModalBtn);
		    }
		
		    // S·ª± ki·ªán x√≥a ph·∫ßn h·ªçc
		    const deleteIcon = newSection.querySelector('.section-actions .action-icon:nth-child(2)');
		    if (deleteIcon) {
		        deleteIcon.addEventListener('click', function () {
					const sectionId = editIcon.getAttribute('data-id');
					fetch(`/utedemyProject/teacher/deleteSection`, {
		                method: 'POST',
		                headers: {
		                    'Content-Type': 'application/x-www-form-urlencoded'
		                },
		                body: `sectionId=${sectionId}`
		            })
		            .then(response => {
		                if (response.ok) {
		                    newSection.remove(); 
		                } else {
		                    alert("L·ªói khi x√≥a ph·∫ßn h·ªçc!");
		                }
		            })
		            .catch(error => {
		                console.error("L·ªói khi g·ªçi x√≥a:", error);
		                alert("Kh√¥ng th·ªÉ k·∫øt n·ªëi ƒë·∫øn server.");
		            });
		        });
		    }
		    
		    const editIcon = newSection.querySelector('.section-actions .action-icon.edit-section');
			if (editIcon) {
			  editIcon.addEventListener('click', function () {
					const sectionId = this.getAttribute('data-id');
					const currentSectionElement = this.closest('.course-section'); // l·∫•y ph·∫ßn ƒëang s·ª≠a
					
					fetch(`/utedemyProject/teacher/editSection?sectionId=${sectionId}`)
						.then(response => response.json())
						.then(data => {
							if (data && data.title) {
								openEditSectionModal(data.title); // G√°n l·∫°i gi√° tr·ªã l√™n input
								editingSectionElement = currentSectionElement; // ƒë√∫ng ph·∫ßn t·ª≠ ƒëang ƒë∆∞·ª£c ch·ªânh
								console.log('editingSectionElement4:', editingSectionElement);
								editingSectionId = sectionId;
							} else {
								alert("Kh√¥ng l·∫•y ƒë∆∞·ª£c d·ªØ li·ªáu ph·∫ßn h·ªçc!");
							}
						})
						.catch(error => {
							console.error("L·ªói khi g·ªçi d·ªØ li·ªáu:", error);
							alert("Kh√¥ng th·ªÉ k·∫øt n·ªëi ƒë·∫øn server.");
						});
				});
			}
		}

        // X·ª≠ l√Ω n√∫t l∆∞u cho modal b√†i h·ªçc
        if (saveDetailBtn && lessonDetailModal) {
		    saveDetailBtn.addEventListener('click', function () {
		        const title = document.querySelector('#lesson .form-input[placeholder="Nh·∫≠p ti√™u ƒë·ªÅ"]').value.trim();
		        const description = document.querySelector('#lesson textarea.form-input').value.trim();
		        const isFreeLesson = document.getElementById('freeTrialCheckbox').checked;
		        const videoUrl = document.querySelector('#lesson .video-input').value.trim();
				
				const existingItems = currentSection.querySelectorAll('.lesson-item').length - 1;
		        const itemNumber = existingItems + 1;
		        
		        console.log("editingLessonElement = ", editingLessonElement);
		        if (title && currentSection) {
					if (editingLessonElement){
					  const titleDiv = editingLessonElement.querySelector('.section-title');
				      if (titleDiv) {
				        titleDiv.textContent = `B√†i ${itemNumber}: ${title}`;
				      }
				
				      // G·ª≠i request c·∫≠p nh·∫≠t n·∫øu c·∫ßn
				      fetch('/utedemyProject/teacher/updateLesson', {
				        method: 'POST',
				        headers: {
				          'Content-Type': 'application/x-www-form-urlencoded'
				        },
				        body: new URLSearchParams({
						    lessonId: editingLessonId,
						    title: title,
						    isFreeLesson: isFreeLesson,
						    description: description,
						    videoUrl: videoUrl
						})
				      })
				      .then(response => {
				        if (response.ok) {
				          // C·∫≠p nh·∫≠t l·∫°i UI n·∫øu mu·ªën
				          const titleDiv = editingLessonElement.querySelector('.section-title');
				          if (titleDiv) {
				            titleDiv.textContent = `B√†i ${itemNumber}: ${title}`;
				          }
						  const checkbox = editingLessonElement.querySelector('.free-lesson-checkbox');
						  if (checkbox) {
						     checkbox.checked = isFreeLesson;
						  }
				          closeLessonDetailModal();
				          editingLessonId = null;
				          editingLessonElement = null;
				        } else {
				          alert("L·ªói khi c·∫≠p nh·∫≠t ph·∫ßn h·ªçc!");
				        }
				      });
					} 
					else{
						// G·ª≠i d·ªØ li·ªáu b√†i h·ªçc v·ªÅ server b·∫±ng fetch
			            const sectionId = currentSection.getAttribute('data-section-id'); // L·∫•y id ph·∫ßn h·ªçc n·∫øu c√≥
			            fetch('/utedemyProject/teacher/addLesson', {
			                method: 'POST',
			                headers: {
			                    'Content-Type': 'application/x-www-form-urlencoded',
			                },
			                body: new URLSearchParams({
			                    title: title,
			                    description: description,
			                    isFreeLesson: isFreeLesson,
			                    videoUrl: videoUrl,
			                    sectionId: sectionId,
			                    numerical: itemNumber + 1
			                })
			            })
			            .then(response => {
			                if (response.ok) {
						        return response.json(); // Tr·∫£ v·ªÅ object lu√¥n
						    }
						    throw new Error('L·ªói khi g·ª≠i d·ªØ li·ªáu');
			            })
			            .then(data => {
						    const lessonId = data.lessonId;
						    // X·ª≠ l√Ω hi·ªÉn th·ªã nh∆∞ c≈© (n·∫øu mu·ªën hi·ªÉn th·ªã ngay tr√™n giao di·ªán
			                const newLesson = document.createElement('div');
			                newLesson.className = 'lesson-item';
			                newLesson.innerHTML = `
			                    <div class="section-header">
			                        <div class="section-title">
			                            <span>B√†i ${itemNumber + 1}: ${title}</span>
			                        </div>
			                        <div class="section-columns">
			                            <div class="column-label">
			                                <input type="checkbox" class="free-lesson-checkbox" ${isFreeLesson ? 'checked' : ''}>
			                            </div>
			                            <div class="column-label">-</div>
			                            <div class="column-label">12</div>
			                        </div>
			                        <div class="section-actions">
			                            <div class="action-icon" data-id="${lessonId}">‚úé</div>
			                            <div class="action-icon">üóë</div>
			                        </div>
			                    </div>
			                `;
			
			                const deleteButton = newLesson.querySelector('.action-icon:nth-child(2)');
			                if (deleteButton) {
			                    deleteButton.addEventListener('click', function () {
			                        const lessonId = editButton.getAttribute('data-id');
									fetch(`/utedemyProject/teacher/deleteLesson`, {
						                method: 'POST',
						                headers: {
						                    'Content-Type': 'application/x-www-form-urlencoded'
						                },
						                body: `lessonId=${lessonId}`
						            })
						            .then(response => {
						                if (response.ok) {
						                    newLesson.remove();
						                } else {
						                    alert("L·ªói khi x√≥a ph·∫ßn h·ªçc!");
						                }
						            })
						            .catch(error => {
						                console.error("L·ªói khi g·ªçi x√≥a:", error);
						                alert("Kh√¥ng th·ªÉ k·∫øt n·ªëi ƒë·∫øn server.");
						            });  
			                    });
			                }
			                
			                const editButton = newLesson.querySelector('.action-icon:nth-child(1)');
							if (editButton) {
							  editButton.addEventListener('click', function () {
									const lessonId = this.getAttribute('data-id');
									const currentLessonElement = this.closest('.lesson-item'); // l·∫•y ph·∫ßn ƒëang s·ª≠a
									
									fetch(`/utedemyProject/teacher/editLesson?lessonId=${lessonId}`)
										.then(response => response.json())
										.then(data => {
											if (data && data.description && data.title && data.videoUrl) {
												openEditLessonModal(data.description, data.title, data.videoUrl, data.isFreeLesson);  // G√°n l·∫°i gi√° tr·ªã l√™n input
												editingLessonElement = currentLessonElement; // ƒë√∫ng ph·∫ßn t·ª≠ ƒëang ƒë∆∞·ª£c ch·ªânh
												editingLessonId = lessonId;
											} else {
												alert("Kh√¥ng l·∫•y ƒë∆∞·ª£c d·ªØ li·ªáu ph·∫ßn h·ªçc!");
											}
										})
										.catch(error => {
											console.error("L·ªói khi g·ªçi d·ªØ li·ªáu:", error);
											alert("Kh√¥ng th·ªÉ k·∫øt n·ªëi ƒë·∫øn server.");
										});
								});
							}

			
			                const lessonActions = currentSection.querySelector('.lesson-actions');
			                if (lessonActions) {
			                    currentSection.insertBefore(newLesson, lessonActions);
			                } else {
			                    currentSection.appendChild(newLesson);
			                }
			
			                closeLessonDetailModal();
			
			                // Reset form
			                document.querySelector('#lesson .form-input[placeholder="Nh·∫≠p ti√™u ƒë·ªÅ"]').value = '';
			                document.querySelector('#lesson textarea.form-input').value = '';
			                document.querySelector('#lesson .video-input').value = '';
			                document.getElementById('freeTrialCheckbox').checked = false;
			
			                console.log('ƒê√£ g·ª≠i b√†i h·ªçc:', data);
							
						})
			            .catch(error => {
			                console.error(error);
			                alert('ƒê√£ x·∫£y ra l·ªói khi l∆∞u b√†i h·ªçc.');
			            });
					}
				}
		    });
		}
		function openEditLessonModal(description, title, videoUrl, isFreeLesson ) {
		  const modal = document.getElementById('lesson');
		  const descriptionInput = modal.querySelector('textarea[name="description"]');
  		  const titleInput = modal.querySelector('input[name="sectionTitle"]');
 		  const videoInput = modal.querySelector('input[name="videoUrl"]');
 		  const freeLessonCheckbox = document.getElementById('freeTrialCheckbox');
		  
		  if (titleInput && descriptionInput && videoInput && freeLessonCheckbox) {
		    descriptionInput.value = description;
		    titleInput.value = title;
		    videoInput.value = videoUrl;
		    freeLessonCheckbox.checked = isFreeLesson === true || isFreeLesson === "true";
		  }
		  lessonDetailModal.classList.add('show');
		}

        
        // B·∫Øt s·ª± ki·ªán cho c√°c n√∫t ƒë∆∞·ª£c th√™m v√†o DOM sau n√†y
        document.addEventListener('click', function(e) {
            if (e.target.classList.contains('lesson-button') && e.target.textContent === 'B√†i h·ªçc m·ªõi') {
                const section = e.target.closest('.course-section');
                if (section) {
                    openLessonDetailModal(section);
                }
            }
        });
        
     	// X·ª≠ l√Ω n√∫t l∆∞u cho modal quiz
        if (saveQuizBtn && quizModal) {
            saveQuizBtn.addEventListener('click', function() {
				const quizId = quizModal.getAttribute('data-quiz-id');
    			const isEditMode = !!quizId;
    
                const title = document.querySelector('#quiz .form-input[placeholder="Nh·∫≠p ti√™u ƒë·ªÅ"]').value.trim();
                const description = document.querySelector('#quiz .form-input[placeholder="Nh·∫≠p m√¥ t·∫£"]').value.trim();
                const durationInput = document.querySelector('#quiz .quiz-duration');
				const duration = durationInput ? parseInt(durationInput.value.trim(), 10) : 0;

				console.log("‚è± Duration g·ª≠i l√™n:", duration);
				
                const existingItems = currentQuizSection.querySelectorAll('.lesson-item').length - 1;
				const itemNumber = existingItems + 1;
                const rawQuestions = [];
			    document.querySelectorAll('.question-container').forEach(qEl => {
			        const questionText = qEl.querySelector('.question-input')?.value.trim();
			        const questionScore = qEl.querySelector('.question-score')?.value.trim();
			        const rawAnswers = [];
			        qEl.querySelectorAll('.answer-option').forEach(aEl => {
			            const answerText = aEl.querySelector('.answer-input')?.value.trim();
			            const isCorrect = aEl.querySelector('.answer-checkbox')?.checked;
			            if (answerText !== '') {
			                rawAnswers.push({
			                    text: answerText,
			                    correct: isCorrect,
			                    
			                });
			            }
			        });
			        if (questionText !== '') {
			            rawQuestions.push({
			                question: questionText,
			                score: questionScore,
			                answers: rawAnswers        
			            });
			        }
			    });

                if (title && currentQuizSection) {
                    // ƒê·∫øm s·ªë b√†i tr·∫Øc nghi·ªám hi·ªán t·∫°i trong ph·∫ßn n√†y
                    const quizData = {
						id: isEditMode ? quizId : null,
				        title: title,
				        description: description,
				        duration: duration,
				        numberItem: itemNumber + 1,
				        questions: rawQuestions.map(q => ({
				            description: q.question,
				            score: q.score,
				            answers: q.answers.map(a => ({
				                content: a.text,
				                isCorrect: a.correct
				            }))
				        }))
				    };
					
					const url = isEditMode ? '/utedemyProject/teacher/updateQuiz' : '/utedemyProject/teacher/addQuiz';
					if (!isEditMode) {
					    delete quizData.id; // N·∫øu th√™m m·ªõi th√¨ xo√° id
					} else {
					    const quizIdValue = quizModal.getAttribute('data-quiz-id');
					    // Convert to number or null if undefined/invalid
					    console.log("Quiz ID l·∫•y t·ª´ modal:", quizIdValue);
						console.log("QuizData g·ª≠i l√™n server:", quizData);
						console.log("Duration g·ª≠i ƒëi:", durationInput.value.trim());
						console.log("QuizData:", quizData);
					    if (quizIdValue && quizIdValue !== "undefined" && !isNaN(parseInt(quizIdValue))) {
						    quizData.id = parseInt(quizIdValue, 10);
						} else {
						    console.warn("‚ö†Ô∏è Quiz ID kh√¥ng h·ª£p l·ªá, kh√¥ng g·ª≠i ID cho server.");
						    delete quizData.id;
						}
					}
                    fetch(url, {
			            method: 'POST',
			            headers: {
			                'Content-Type': 'application/json'
			            },
			            body: JSON.stringify(quizData)
			        })
		            .then(response => {
					    console.log('Tr·∫°ng th√°i ph·∫£n h·ªìi:', response.status); // th√™m d√≤ng n√†y
					    if (response.ok) {
					        return response.json(); 
					    }
					    return response.text().then(text => {
					        console.error('L·ªói chi ti·∫øt t·ª´ server:', text);
					        throw new Error('L·ªói khi g·ª≠i d·ªØ li·ªáu');
					    });
					})
		            .then(result => {         
	                    const quizId = result.quizId;
	                    
	                    if (!isEditMode) {
							// T·∫°o ph·∫ßn t·ª≠ b√†i tr·∫Øc nghi·ªám m·ªõi
		                    const newQuiz = document.createElement('div');
		                    newQuiz.setAttribute('data-quiz-id', quizId);
		                    
		                    newQuiz.className = 'quiz-item lesson-item';
		                    newQuiz.innerHTML = `
		                        <div class="section-header">
		                            <div class="section-title">
		                                <span>B√†i ${itemNumber + 1}: ${title}</span>
		                            </div>
		                            <div class="section-columns">
		                                <div class="column-label">-</div>
		                                <div class="column-label">-</div>
		                                <div class="column-label">-</div>
		                            </div>
		                            <div class="section-actions">
		                                <div class="action-icon">‚úé</div>
		                                <div class="action-icon">üóë</div>
		                            </div>
		                        </div>
		                    `;
		                    
		                    const deleteButton = newQuiz.querySelector('.action-icon:nth-child(2)');
				            if (deleteButton) {
				                deleteButton.addEventListener('click', function() {
				                	const quizId = newQuiz.getAttribute('data-quiz-id'); 
									fetch(`/utedemyProject/teacher/deleteQuiz`, {
						                method: 'POST',
						                headers: {
						                    'Content-Type': 'application/x-www-form-urlencoded'
						                },
						                body: `quizId=${quizId}`
						            })
						            .then(response => {
						                if (response.ok) {
						                    newQuiz.remove();
						                } else {
						                    alert("L·ªói khi x√≥a ph·∫ßn h·ªçc!");
						                }
						            })
						            .catch(error => {
						                console.error("L·ªói khi g·ªçi x√≥a:", error);
						                alert("Kh√¥ng th·ªÉ k·∫øt n·ªëi ƒë·∫øn server.");
						            });	
				                });
				            }
				            
				            const editButton = newQuiz.querySelector('.action-icon:nth-child(1)');
							if (editButton) {
							    editButton.addEventListener('click', function () {
							        const quizId = newQuiz.getAttribute('data-quiz-id');
							        if (quizId) {
							            fetch(`/utedemyProject/teacher/editQuiz?quizId=${quizId}`)
							                .then(res => res.json())
							                .then(data => {
							                    // G·ªçi h√†m ƒëi·ªÅn d·ªØ li·ªáu v√†o modal
							                    populateQuizModal(data);
							                    openQuizModal(currentQuizSection);
							                })
							                .catch(err => console.error('L·ªói khi l·∫•y d·ªØ li·ªáu quiz:', err));
							        }
							    });
							}
		                    
		                    // Th√™m b√†i tr·∫Øc nghi·ªám m·ªõi v√†o ph·∫ßn h·ªçc hi·ªán t·∫°i
		                    const lessonActions = currentQuizSection.querySelector('.lesson-actions');
		                    if (lessonActions) {
		                        currentQuizSection.insertBefore(newQuiz, lessonActions);
		                    } else {
		                        currentQuizSection.appendChild(newQuiz);
		                    }
						}
						else{
							// T√¨m ph·∫ßn t·ª≠ quiz ƒëang hi·ªÉn th·ªã tr√™n giao di·ªán b·∫±ng quizId
						    const existingQuiz = document.querySelector(`.quiz-item[data-quiz-id="${quizId}"]`);
						
						    if (existingQuiz) {
						        // C·∫≠p nh·∫≠t l·∫°i ph·∫ßn ti√™u ƒë·ªÅ b√†i tr·∫Øc nghi·ªám
						        const titleElement = existingQuiz.querySelector('.section-title span');
						        if (titleElement) {
						            titleElement.textContent = `B√†i ${itemNumber + 1}: ${title}`;
						        }
						
						        // (Tu·ª≥ ch·ªçn) N·∫øu b·∫°n mu·ªën c·∫≠p nh·∫≠t th√™m m√¥ t·∫£, s·ªë l∆∞·ª£ng c√¢u h·ªèi, v.v... b·∫°n c√≥ th·ªÉ th√™m ·ªü ƒë√¢y
						    }
						}
	                    closeQuizModal();
	                    quizModal.removeAttribute('data-quiz-id');
	                   	// Reset form
	                    const titleInput = document.querySelector('#quiz .form-input[placeholder="Nh·∫≠p ti√™u ƒë·ªÅ"]');
	                    const descInput = document.querySelector('#quiz .form-input[placeholder="Nh·∫≠p m√¥ t·∫£"]');
	                    
	                    	if (titleInput) titleInput.value = 'B√†i Ki·ªÉm Tra'; // Gi·ªØ gi√° tr·ªã m·∫∑c ƒë·ªãnh
	                    	if (descInput) descInput.value = '';
	                	})
	                	.catch(error => {
			                console.error(error);
			                alert('ƒê√£ x·∫£y ra l·ªói khi l∆∞u b√†i h·ªçc.');
			            });
	                }
                	
            	});
        	}
        	
        	function populateQuizModal(data) {
			    // ƒêi·ªÅn ti√™u ƒë·ªÅ, m√¥ t·∫£
			    const titleInput = document.querySelector('#quiz .form-input[placeholder="Nh·∫≠p ti√™u ƒë·ªÅ"]');
			    const descInput = document.querySelector('#quiz .form-input[placeholder="Nh·∫≠p m√¥ t·∫£"]');
			    const durationInput = document.querySelector('#quiz .quiz-duration');
			    if (titleInput) titleInput.value = data.title;
			    if (descInput) descInput.value = data.description;
			    if (durationInput) durationInput.value = data.duration || 0;
			    
			    quizModal.setAttribute('data-quiz-id', data.id);
				console.log("QuizData g·ª≠i l√™n server:", data.id);
			    // Xo√° to√†n b·ªô c√¢u h·ªèi c≈©
			    document.querySelectorAll('.question-container').forEach(q => q.remove());
			
			    // L·∫∑p qua c√°c c√¢u h·ªèi ƒë·ªÉ t·∫°o l·∫°i
			    data.questions.forEach(q => {
			        addQuestionBtn.click(); // Nh·∫•n n√∫t ƒë·ªÉ t·∫°o c√¢u h·ªèi m·ªõi
			        const lastQuestion = document.querySelectorAll('.question-container');
			        const newQ = lastQuestion[lastQuestion.length - 1];
			
			        newQ.querySelector('.question-input').value = q.description;
			        newQ.querySelector('.question-score').value = q.score;
			
			        const answersContainer = newQ.querySelector('.answers-container');
			        answersContainer.innerHTML = ''; // Xo√° s·∫µn 4 answer tr·ªëng
			
			        q.answers.forEach(a => {
			            const answerEl = document.createElement('div');
			            answerEl.className = 'answer-option';
			            answerEl.innerHTML = `
			                <input type="checkbox" class="answer-checkbox" ${a.isCorrect ? 'checked' : ''}>
			                <input type="text" class="answer-input" value="${a.content}" placeholder="Nh·∫≠p c√¢u tr·∫£ l·ªùi">
			                <button class="delete-answer">üóëÔ∏è</button>
			            `;
			            answersContainer.appendChild(answerEl);
			
			            // G·∫Øn s·ª± ki·ªán x√≥a
			            answerEl.querySelector('.delete-answer').addEventListener('click', function () {
			                answerEl.remove();
			            });
			        });
			    });
			}
     	// B·∫Øt s·ª± ki·ªán cho c√°c n√∫t "B√†i tr·∫Øc nghi·ªám" ƒë∆∞·ª£c th√™m v√†o DOM sau n√†y
        document.addEventListener('click', function(e) {
            if (e.target.classList.contains('lesson-button') && e.target.textContent === 'B√†i tr·∫Øc nghi·ªám') {
                const section = e.target.closest('.course-section');
                if (section) {
                    openQuizModal(section);
                }
            }
        });
        
        // C·∫≠p nh·∫≠t h√†m saveBtn ƒë·ªÉ th√™m event listener cho n√∫t "B√†i tr·∫Øc nghi·ªám" m·ªõi
        if (saveBtn && lessonModal) {
            // Gi·ªØ nguy√™n code hi·ªán t·∫°i v√† th√™m ƒëo·∫°n sau v√†o cu·ªëi h√†m x·ª≠ l√Ω s·ª± ki·ªán click
            const originalClickHandler = saveBtn.onclick;
            saveBtn.onclick = function(e) {
                if (originalClickHandler) {
                    originalClickHandler.call(this, e);
                }
                
                // Th√™m event listener cho n√∫t "B√†i tr·∫Øc nghi·ªám" m·ªõi t·∫°o
                const newQuizButtons = document.querySelectorAll('.lesson-button');
                newQuizButtons.forEach(button => {
                    if (button.textContent === 'B√†i tr·∫Øc nghi·ªám' && !button.hasEventListener) {
                        button.hasEventListener = true;
                        button.addEventListener('click', function() {
                            const section = this.closest('.course-section');
                            openQuizModal(section);
                        });
                    }
                });
            };
        }
    });